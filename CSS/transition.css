
.dot {
  position: relative; 
  background-color: darkblue;
  width: 100px;
  height: 100px;
  /* makes a circle */
  border-radius: 50%;
  margin-top: 20px; 
  /* specifies a transition effect for all properties 
  for .75 seconds. The cubic-bezier function defines an easing curve for the transition */
  transition: all 0.75s cubic-bezier(.71, 0, .33, 1.56) 0ms;
}

/* selects dot class element that is child elemetn of container 
when the container is in a hover state */
.transition-spin-container{
  display: flex;
  justify-content: center;
  align-items: center;
  width: 80%;
  height: 80%;
}

.transition-spin-container:hover .dot{
  /* rotates dot 360 degrees when it is hovered */
  transform: rotate(360deg);
  /* changes dot to a square by removing radius */
  border-radius: 0%;
  background: gold;

}


.flip-container{
  width: 80%;
  height: 80%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.flip-box {
  background-color: transparent;
  width: 80%;
  height: 80%;
  /*perspective gives the element a 3D look when it is transformed*/
  perspective: 1000px;
}

/* inner container that flips when hovered*/
.flip-box-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}

.flip-box:hover .flip-box-inner {
  /*when the flip-box div is hovered, rotates the flip-box-inner div by 180 deg*/
  transform: rotateY(180deg);
}

.flip-box-front,
.flip-box-back {
  /*Overlays the front and back div on top of each other*/
  position: absolute;
  width: 100%;
  height: 100%;
  /*Hides the backs of both the front and back div so they don't show up during the flip*/
  backface-visibility: hidden;
}

.flip-box-front {
  background-color: #bbb;
  color: black;
}

.flip-box-front img{
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.flip-box-back {
  background-color: aliceblue;
  color: black;
  /*flips the back 180 degrees when transformed*/
  transform: rotateY(180deg);
}


.links{
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 30px;
}

a.link1 {
  color: black;
  position: relative;
  /*removes the default text decoration that a link has*/
  text-decoration: none;
  font-size: 100px;
}

a.link1::before {
  /*content is set to '' so that the content in the pseudo class is not hidden*/
  content: '';
  position: absolute;
  width: 100%;
  height: 4px;
  border-radius: 4px;
  background-color: black;
  bottom: 0;
  left: 0;
  /*When not hovered, the link underline is scaled to zero */
  transform-origin: right;
  transform: scaleX(0);
  transition: transform .4s ease-in-out;
}

a.link1:hover::before {
  /*On hover, scales the width of the link underline to the full width of the text*/
  transform-origin: left;
  transform: scaleX(1);
}

.ball-container{
  height: 90%;
  width: 90%;
}

.ball-container-wrapper{
  width: 100%;
  height: 100%;
  position:relative;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

.ball{
  margin: 5px;
  width: 100px;
  height: 60px;
  position:relative;
  border-radius: 50%;
  text-align: center;
  vertical-align: middle;
  line-height: 60px;
  color: white;
  font-size: 15px;
}

#ball1{
  transition: all 2s ease;
  background-color: blue;
}
#ball2{
  transition: all 2s ease-in;
  background-color: red;
}
#ball3{
  transition: all 2s ease-out;
  background-color: green;
}

#ball4{
  transition: all 2s ease-in-out;
  background-color: purple;
}

#ball5{
  transition: all 2s linear;
  background-color: darkorange;
}

#ball6{
  transition: all 2s cubic-bezier(0.68, -0.55, 0.27, 1.55);
  background-color: cyan;
}

.ball-container:hover #ball1{
  transform: translateX(650px);
}

.ball-container:hover #ball2{
  transform: translateX(650px);
}

.ball-container:hover #ball3{
  transform: translateX(650px);
}

.ball-container:hover #ball4{
  transform: translateX(650px);
}

.ball-container:hover #ball5{
  transform: translateX(650px);
}

.ball-container:hover #ball6{
  transform: translateX(650px)
}
